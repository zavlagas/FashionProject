[{"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js":"1","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js":"2","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx":"4","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx":"5","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js":"6","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx":"7","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx":"8","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx":"9","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx":"10","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx":"11","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx":"12","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx":"13","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx":"14","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx":"15","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx":"16"},{"size":523,"mtime":1610299430686,"results":"17","hashOfConfig":"18"},{"size":788,"mtime":1610455630053,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1609752807792,"results":"20","hashOfConfig":"18"},{"size":2854,"mtime":1610455630075,"results":"21","hashOfConfig":"18"},{"size":4901,"mtime":1610455630086,"results":"22","hashOfConfig":"18"},{"size":377,"mtime":1609856797639,"results":"23","hashOfConfig":"18"},{"size":730,"mtime":1610455630087,"results":"24","hashOfConfig":"18"},{"size":8800,"mtime":1610455630105,"results":"25","hashOfConfig":"18"},{"size":1324,"mtime":1610455630106,"results":"26","hashOfConfig":"18"},{"size":902,"mtime":1610455630097,"results":"27","hashOfConfig":"18"},{"size":2039,"mtime":1610456641090,"results":"28","hashOfConfig":"18"},{"size":312,"mtime":1610455630077,"results":"29","hashOfConfig":"18"},{"size":2108,"mtime":1610455630065,"results":"30","hashOfConfig":"18"},{"size":63,"mtime":1610455630128,"results":"31","hashOfConfig":"18"},{"size":2114,"mtime":1610459886134,"results":"32","hashOfConfig":"18"},{"size":2812,"mtime":1610464401253,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jif629",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js",[],["72","73"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js",["74"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx",["75"],"import React, { Component } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    // this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user === null) {\r\n      this.handleLogout();\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"app-header\">\r\n          <NavBar></NavBar>\r\n        </header>\r\n        <main>\r\n          <h1>WELCOME TO DASHBOARD</h1>\r\n          <button type=\"button\" onClick={this.handleLogout}>\r\n            Signout\r\n          </button>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx",["76"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      hasError: false,\r\n    };\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  changeReactValue = (event) => {\r\n    if (event.target.getAttribute(\"name\") === \"username\") {\r\n      this.setState({ username: event.target.value.trim() });\r\n    }\r\n    if (event.target.getAttribute(\"name\") === \"password\") {\r\n      this.setState({ password: event.target.value.trim() });\r\n    }\r\n  };\r\n\r\n  handleSignUpClick = (event) => {\r\n    this.props.history.push(\"/signup\");\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const endpoint = \"http://localhost:8080/FashionProject/authenticate\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      try {\r\n        localStorage.setItem(\"authorization\", res.data.token);\r\n        return this.handleDashboard();\r\n      } catch (error) {\r\n        this.setState({ hasError: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDashboard() {\r\n    const endpoint = \"http://localhost:8080/FashionProject/dashboard\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data.success));\r\n        this.props.history.push(\"/dashboard\");\r\n      } else {\r\n        console.log(\"not showing\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"login\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"text-center\">Log In</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-signin\"\r\n                    onSubmit={this.handleFormSubmit}\r\n                  >\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        onChange={this.changeReactValue}\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-key\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        onChange={this.changeReactValue}\r\n                        placeholder=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"row align-items-center remember\">\r\n                      <input type=\"checkbox\" />\r\n                      Remember Me\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn float-right glow-on-hover\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"d-flex justify-content-center links \">\r\n                    <span className=\"p-1\">Don't have an account?</span>\r\n                    <Link\r\n                      className=\"btn btn-warning p-1 px-3 mx-2\"\r\n                      to=\"/signup\"\r\n                    >\r\n                      Sign Up\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx",["77","78"],"import React, { Component } from \"react\";\r\nimport StripeButton from \"./StripeButton\";\r\nimport axios from \"axios\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    document.querySelector(\".app-container\").classList.add(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      dob: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n      role: \"1\",\r\n      plan: {},\r\n      formIsChecked: false,\r\n      formSubmitted: false,\r\n    };\r\n    this.sendPostRequest = this.sendPostRequest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  checkIfFormIsFilled() {\r\n    if (\r\n      this.state.firstName.length > 1 &&\r\n      this.state.lastName.length > 1 &&\r\n      this.state.email.length > 1 &&\r\n      this.state.dob.length > 1 &&\r\n      this.state.password.length > 1 &&\r\n      this.state.username.length > 1\r\n    ) {\r\n      this.setState({\r\n        formIsChecked: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formIsChecked: false,\r\n      });\r\n    }\r\n    this.showStripeButton();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.checkIfFormIsFilled();\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    this.checkIfFormIsFilled();\r\n  }\r\n\r\n  handleRoleDetailsContainer() {\r\n    if (this.state.role === \"1\") {\r\n      return (\r\n        <>\r\n          <p className=\"role-description\">\r\n            This plan gives you the opportunity to become a real lover of\r\n            fashion, you have the options to chat with the designer of each\r\n            brand and with other lovers and evaluate their products\r\n          </p>\r\n          <div className=\"role-subscription\">\r\n            <span>Free Account</span>\r\n            <button onClick={() => this.sendPostRequest()}>\r\n              Subscribe Now\r\n            </button>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p className=\"role-description\">\r\n            This plan gives you the opportunity to become a real fashion\r\n            designer, you have the options to chat with fans and create new\r\n            brands and products and make your dreams come true\r\n          </p>\r\n          <div className=\"role-subscription\">\r\n            <span>Premium Account</span>\r\n            {this.showStripeButton()}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  showStripeButton() {\r\n    if (this.state.formIsChecked) {\r\n      return (\r\n        <>\r\n          <StripeButton\r\n            sendPost={this.sendPostRequest}\r\n            email={this.state.email}\r\n            fullname={`${this.state.firstName} ${this.state.lastName}`}\r\n            price=\"20\"\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <button>Fill Out The Form</button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  sendPostRequest() {\r\n    console.log(\"Send Post Request\");\r\n    const endpoint = \"http://localhost:8080/FashionProject/signup\";\r\n    const user = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      email: this.state.email,\r\n      dob: this.state.dob,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      roleList: [\r\n        this.state.role === \"1\"\r\n          ? { id: 1, type: \"USER\" }\r\n          : { id: 2, type: \"ADMIN\" },\r\n      ],\r\n      subscription: {\r\n        plan:\r\n          this.state.role === \"1\"\r\n            ? { id: 1, name: \"FASHION_LOVER\", price: 0 }\r\n            : { id: 2, name: \"FASHION_MAKER\", price: 20 },\r\n      },\r\n    };\r\n    axios\r\n      .post(endpoint, user)\r\n      .then((res) => {\r\n        try {\r\n          this.setState({\r\n            formSubmitted: true,\r\n          });\r\n        } catch (error) {}\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"\" id=\"signup-container\">\r\n          <h1 className=\"signup-title\">Create an account</h1>\r\n          <section className=\"form-container\">\r\n            <form className=\"form-signup\" onSubmit={this.handleFormSubmit}>\r\n              <div id=\"firstname-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"firstname\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"firstname\"\r\n                />\r\n              </div>\r\n              <div id=\"lastname-input-section\" className=\"input-form-group\">\r\n                <label className=\"signup-label\" htmlFor=\"lastname\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"lastname\"\r\n                />\r\n              </div>\r\n              <div id=\"dob-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"dob\">\r\n                  Birth Date\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  value={this.state.dob}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"dob\"\r\n                />\r\n              </div>\r\n              <div id=\"email-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-email\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"signup-email\"\r\n                />\r\n              </div>\r\n              <div id=\"username-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-username\">\r\n                  Username\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"signup-username\"\r\n                />\r\n              </div>\r\n              <div id=\"password-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  autoComplete=\"current-password\"\r\n                  className=\"signup-input\"\r\n                  id=\"signup-password\"\r\n                />\r\n              </div>\r\n              <div id=\"roles-input-section\" className=\"input-form-group \">\r\n                <p>Please Select Your Role</p>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value={1}\r\n                  onChange={this.handleChange}\r\n                  className=\"sr-only\"\r\n                  id=\"fashion-lover\"\r\n                />\r\n                <label id=\"fashionlover-label\" htmlFor=\"fashion-lover\">\r\n                  <img src=\"https://i.imgur.com/TdJ21oq.gif\" />\r\n                </label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value={2}\r\n                  onChange={this.handleChange}\r\n                  className=\"sr-only\"\r\n                  id=\"fashion-maker\"\r\n                />\r\n                <label id=\"fashionmaker-label\" htmlFor=\"fashion-maker\">\r\n                  <img src=\"https://i.imgur.com/HvbINLy.gif\" />\r\n                </label>\r\n              </div>\r\n              <div className=\"role-details-container\">\r\n                {this.handleRoleDetailsContainer()}\r\n              </div>\r\n            </form>\r\n          </section>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx",["79"],"import React, { Component } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport interceptors from \"../Interceptors\";\r\n\r\nclass StripeButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      publ_stripe_key:\r\n        \"pk_test_51I6V9NDhiMmdhGSnrszydNErU0Bpd6NdaSf356KAL4xhC6UxvGlQtFZlceFQS8IkhuVdfqj6eSpEkfRa5z0ZST2j003zvBa1cU\",\r\n      stripePrice: this.props.price * 100,\r\n    };\r\n    this.onToken = this.onToken.bind(this);\r\n  }\r\n\r\n  onToken(token) {\r\n    const endPoint = \"http://localhost:8080/FashionProject/payment\";\r\n    const priceObject = {\r\n      amount: this.state.stripePrice,\r\n      token,\r\n    };\r\n    axios\r\n      .post(endPoint, priceObject)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.props.sendPost();\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  render() {\r\n    return (\r\n      <StripeCheckout\r\n        amount={this.state.stripePrice}\r\n        label=\"Pay Now\"\r\n        email={this.props.email}\r\n        name={this.props.fullname}\r\n        image=\"\"\r\n        type=\"button\"\r\n        panelLabel=\"Pay Now\"\r\n        token={this.onToken}\r\n        stripeKey={this.state.publ_stripe_key}\r\n        currency=\"EUR\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StripeButton;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx",["80"],"import React, { Component } from \"react\";\r\nimport SockJsClient from \"react-stomp\";\r\nimport axios from \"axios\";\r\nimport { TalkBox } from \"react-talk\";\r\nimport UsernameGenerator from \"username-generator\";\r\n\r\nconst randomstring = require(\"randomstring\");\r\nclass Chat extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.randomUserName = this.props.username;\r\n    this.randomUserId = randomstring.generate();\r\n    this.state = {\r\n      clientConnected: false,\r\n      messages: [],\r\n    };\r\n  }\r\n  onMessageReceive = (msg, topic) => {\r\n    this.setState((prevState) => ({\r\n      messages: [...prevState.messages, msg],\r\n    }));\r\n  };\r\n\r\n  sendMessage = (msg, selfMsg) => {\r\n    try {\r\n      this.clientRef.sendMessage(\"/app/all\", JSON.stringify(selfMsg));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    axios\r\n      .get(\"http://localhost:8080/FashionProject/history\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (this._isMounted) {\r\n          this.setState({ messages: response.data });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const wsSourceUrl = \"http://localhost:8080/FashionProject/handler\";\r\n    return (\r\n      <div className=\"talkbox-wrapper\">\r\n        <TalkBox\r\n          topic=\"Chat\"\r\n          currentUserId={this.randomUserId}\r\n          currentUser={this.randomUserName}\r\n          messages={this.state.messages}\r\n          onSendMessage={this.sendMessage}\r\n          connected={this.state.clientConnected}\r\n        />\r\n\r\n        <SockJsClient\r\n          url={wsSourceUrl}\r\n          topics={[\"/topic/all\"]}\r\n          onMessage={this.onMessageReceive}\r\n          ref={(client) => {\r\n            this.clientRef = client;\r\n          }}\r\n          onConnect={() => {\r\n            this.setState({ clientConnected: true });\r\n          }}\r\n          onDisconnect={() => {\r\n            this.setState({ clientConnected: false });\r\n          }}\r\n          debug={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":20},{"ruleId":"89","severity":1,"message":"90","line":77,"column":17,"nodeType":"91","endLine":77,"endColumn":60},{"ruleId":"85","severity":1,"message":"92","line":2,"column":16,"nodeType":"87","messageId":"88","endLine":2,"endColumn":24},{"ruleId":"89","severity":1,"message":"90","line":252,"column":19,"nodeType":"91","endLine":252,"endColumn":64},{"ruleId":"89","severity":1,"message":"90","line":263,"column":19,"nodeType":"91","endLine":263,"endColumn":64},{"ruleId":"85","severity":1,"message":"86","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":20},{"ruleId":"85","severity":1,"message":"93","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":25},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'interceptors' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'UsernameGenerator' is defined but never used.","no-global-assign","no-unsafe-negation"]
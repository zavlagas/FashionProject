[{"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js":"1","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js":"2","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx":"4","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx":"5","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js":"6","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx":"7","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx":"8","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx":"9","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx":"10","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx":"11","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx":"12","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx":"13","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx":"14","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx":"15","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx":"16","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\CloudinaryWidget.jsx":"17","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandsInspector.jsx":"18","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductInspector.jsx":"19","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SearchPosts.jsx":"20"},{"size":523,"mtime":1610299430686,"results":"21","hashOfConfig":"22"},{"size":788,"mtime":1610455630053,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1609752807792,"results":"24","hashOfConfig":"22"},{"size":3180,"mtime":1610974772989,"results":"25","hashOfConfig":"22"},{"size":4906,"mtime":1610822783735,"results":"26","hashOfConfig":"22"},{"size":377,"mtime":1609856797639,"results":"27","hashOfConfig":"22"},{"size":621,"mtime":1610922836518,"results":"28","hashOfConfig":"22"},{"size":8902,"mtime":1610973620885,"results":"29","hashOfConfig":"22"},{"size":1324,"mtime":1610455630106,"results":"30","hashOfConfig":"22"},{"size":957,"mtime":1610951869357,"results":"31","hashOfConfig":"22"},{"size":9891,"mtime":1610975454818,"results":"32","hashOfConfig":"22"},{"size":5150,"mtime":1610955460486,"results":"33","hashOfConfig":"22"},{"size":2108,"mtime":1610455630065,"results":"34","hashOfConfig":"22"},{"size":63,"mtime":1610455630128,"results":"35","hashOfConfig":"22"},{"size":2586,"mtime":1610922377633,"results":"36","hashOfConfig":"22"},{"size":3912,"mtime":1610742086200,"results":"37","hashOfConfig":"22"},{"size":1365,"mtime":1610722813537,"results":"38","hashOfConfig":"22"},{"size":6159,"mtime":1610801260186,"results":"39","hashOfConfig":"22"},{"size":6657,"mtime":1610806138799,"results":"40","hashOfConfig":"22"},{"size":4173,"mtime":1610960645870,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jif629",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js",[],["90","91"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js",["92"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport interceptors from \"./Interceptors\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"app-context\">\r\n          <Router>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route  path=\"/dashboard\" component={Dashboard} />\r\n              <Route  path=\"/signup\" component={SignUp} />\r\n          </Router>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx",["93","94"],"import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport NavBar from \"./NavBar\";\r\nimport Chat from \"./Chat\";\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    document\r\n      .querySelector(\".app-container\")\r\n      .classList.remove(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      chatActive: false,\r\n      props: this.props,\r\n      user: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        roleList: [],\r\n        username: \"\",\r\n        image: \"\",\r\n      },\r\n    };\r\n    this.toggleChatButton = this.toggleChatButton.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user === null) {\r\n      this.handleLogout();\r\n    } else {\r\n      this.setState({\r\n        user: {\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          roleList: user.roleList,\r\n          username: user.username,\r\n          image: user.image,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  toggleChatButton(event) {\r\n    let active = this.state.chatActive;\r\n    if (event.target.id === \"chat-button\") {\r\n      this.setState({\r\n        chatActive: !active,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleChatMovement() {\r\n    if (this.state.chatActive) {\r\n      return <Chat username={this.state.user.username} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.state.props;\r\n    return (\r\n      <>\r\n        <header className=\"app-header\">\r\n          <h1\r\n            onClick={() => this.props.history.push(\"/dashboard/home\")}\r\n            id=\"logo\"\r\n          >\r\n            FashionBook\r\n          </h1>\r\n          <NavBar url={match.url} />\r\n          <div className=\"app-header-user\">\r\n            <Link className=\"profile-link\" to={`${match.url}/profile`}>\r\n              <div className=\"user-profile\">\r\n                <img src={this.state.user.image} />\r\n                <span>Profile</span>\r\n              </div>\r\n            </Link>\r\n            <button\r\n              className=\"sign-out-btn\"\r\n              type=\"button\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              Signout\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <Route\r\n          path={`${match.path}/home`}\r\n          render={() => (\r\n            <Home\r\n              {...this.props}\r\n              authUser={JSON.parse(localStorage.getItem(\"user\"))}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/profile`}\r\n          {...this.props}\r\n          render={() => (\r\n            <Profile\r\n              {...this.props}\r\n              authUser={JSON.parse(localStorage.getItem(\"user\"))}\r\n            />\r\n          )}\r\n        />\r\n        <div onClick={this.toggleChatButton} className=\"chat-container\">\r\n          <button id=\"chat-button\">Chat</button>\r\n          {this.toggleChatMovement()}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx",["95"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    document.querySelector(\".app-container\").classList.add(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleDashboard = this.handleDashboard.bind(this);\r\n  }\r\n\r\n  changeReactValue = (event) => {\r\n    if (event.target.getAttribute(\"name\") === \"username\") {\r\n      this.setState({ username: event.target.value.trim() });\r\n    }\r\n    if (event.target.getAttribute(\"name\") === \"password\") {\r\n      this.setState({ password: event.target.value.trim() });\r\n    }\r\n  };\r\n\r\n  handleSignUpClick = (event) => {\r\n    this.props.history.push(\"/signup\");\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const endpoint = \"http://localhost:8080/FashionProject/authenticate\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      try {\r\n        localStorage.setItem(\"authorization\", res.data.token);\r\n        return this.handleDashboard();\r\n      } catch (error) {\r\n        this.setState({ hasError: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDashboard() {\r\n    const endpoint = \"http://localhost:8080/FashionProject/dashboard\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      console.log(res);\r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data.success));\r\n        this.props.history.push(\"/dashboard/home\");\r\n      } else {\r\n        console.log(\"not showing\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"login\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"text-center\">Log In</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-signin\"\r\n                    onSubmit={this.handleFormSubmit}\r\n                  >\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        onChange={this.changeReactValue}\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-key\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        onChange={this.changeReactValue}\r\n                        placeholder=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"row align-items-center remember\">\r\n                      <input type=\"checkbox\" />\r\n                      Remember Me\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn float-right glow-on-hover\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"d-flex justify-content-center links \">\r\n                    <span className=\"p-1\">Don't have an account?</span>\r\n                    <Link\r\n                      className=\"btn btn-warning p-1 px-3 mx-2\"\r\n                      to=\"/signup\"\r\n                    >\r\n                      Sign Up\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx",["96","97"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx",["98"],"import React, { Component } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport interceptors from \"../Interceptors\";\r\n\r\nclass StripeButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      publ_stripe_key:\r\n        \"pk_test_51I6V9NDhiMmdhGSnrszydNErU0Bpd6NdaSf356KAL4xhC6UxvGlQtFZlceFQS8IkhuVdfqj6eSpEkfRa5z0ZST2j003zvBa1cU\",\r\n      stripePrice: this.props.price * 100,\r\n    };\r\n    this.onToken = this.onToken.bind(this);\r\n  }\r\n\r\n  onToken(token) {\r\n    const endPoint = \"http://localhost:8080/FashionProject/payment\";\r\n    const priceObject = {\r\n      amount: this.state.stripePrice,\r\n      token,\r\n    };\r\n    axios\r\n      .post(endPoint, priceObject)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.props.sendPost();\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  render() {\r\n    return (\r\n      <StripeCheckout\r\n        amount={this.state.stripePrice}\r\n        label=\"Pay Now\"\r\n        email={this.props.email}\r\n        name={this.props.fullname}\r\n        image=\"\"\r\n        type=\"button\"\r\n        panelLabel=\"Pay Now\"\r\n        token={this.onToken}\r\n        stripeKey={this.state.publ_stripe_key}\r\n        currency=\"EUR\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StripeButton;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx",["99","100","101"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx",["102","103","104"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx",["105"],"import React, { Component } from \"react\";\r\nimport SockJsClient from \"react-stomp\";\r\nimport axios from \"axios\";\r\nimport { TalkBox } from \"react-talk\";\r\nimport UsernameGenerator from \"username-generator\";\r\n\r\nconst randomstring = require(\"randomstring\");\r\nclass Chat extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.randomUserName = this.props.username;\r\n    this.randomUserId = randomstring.generate();\r\n    this.state = {\r\n      clientConnected: false,\r\n      messages: [],\r\n    };\r\n  }\r\n  onMessageReceive = (msg, topic) => {\r\n    this.setState((prevState) => ({\r\n      messages: [...prevState.messages, msg],\r\n    }));\r\n  };\r\n\r\n  sendMessage = (msg, selfMsg) => {\r\n    try {\r\n      this.clientRef.sendMessage(\"/app/all\", JSON.stringify(selfMsg));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    axios\r\n      .get(\"http://localhost:8080/FashionProject/history\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (this._isMounted) {\r\n          this.setState({ messages: response.data });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const wsSourceUrl = \"http://localhost:8080/FashionProject/handler\";\r\n    return (\r\n      <div className=\"talkbox-wrapper\">\r\n        <TalkBox\r\n          topic=\"Chat\"\r\n          currentUserId={this.randomUserId}\r\n          currentUser={this.randomUserName}\r\n          messages={this.state.messages}\r\n          onSendMessage={this.sendMessage}\r\n          connected={this.state.clientConnected}\r\n        />\r\n\r\n        <SockJsClient\r\n          url={wsSourceUrl}\r\n          topics={[\"/topic/all\"]}\r\n          onMessage={this.onMessageReceive}\r\n          ref={(client) => {\r\n            this.clientRef = client;\r\n          }}\r\n          onConnect={() => {\r\n            this.setState({ clientConnected: true });\r\n          }}\r\n          onDisconnect={() => {\r\n            this.setState({ clientConnected: false });\r\n          }}\r\n          debug={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\CloudinaryWidget.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandsInspector.jsx",["106","107","108","109"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CloudinaryWidget from \"./CloudinaryWidget\";\r\nclass BrandsInspector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      brandsList: [],\r\n      brandIsDeleted: false,\r\n      popUpForEdit: false,\r\n      brandId: 0,\r\n      brandName: \"\",\r\n      brandimagePath: \"\",\r\n      brandDescr: \"\",\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\r\n    this.handleExit = this.handleExit.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    const buttonAction = event.target.textContent;\r\n    const targetedBrand = event.target.value;\r\n    if (buttonAction === \"delete\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/brands/${targetedBrand}`;\r\n      axios.delete(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          brandIsDeleted: response.data,\r\n        });\r\n      });\r\n      const tempBrandList = this.state.brandsList.filter((brand) => {\r\n        return brand.id != targetedBrand;\r\n      });\r\n      this.setState({\r\n        brandsList: tempBrandList,\r\n      });\r\n    }\r\n    if (buttonAction === \"Edit\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/brands/${targetedBrand}`;\r\n      axios.get(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          brandId: response.data.id,\r\n          brandName: response.data.name,\r\n          brandimagePath: response.data.imagePath,\r\n          brandDescr: response.data.descr,\r\n          popUpForEdit: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllBrands() {\r\n    const endpoint = `http://localhost:8080/FashionProject/api/brands/user/${this.props.user.id}`;\r\n\r\n    axios.get(endpoint).then((response) => {\r\n      this.setState({\r\n        brandsList: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllBrands();\r\n  }\r\n\r\n  handleResponseFromCloudinaryWidget(urlImages) {\r\n    this.setState({\r\n      brandimagePath: urlImages.info.secure_url,\r\n    });\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault();\r\n    const endPoint = `http://localhost:8080/FashionProject/api/brands/${this.state.brandId}`;\r\n    const Brand_object = {\r\n      name: this.state.brandName,\r\n      descr: this.state.brandDescr,\r\n      imagePath: this.state.brandimagePath,\r\n      user: this.props.user.id,\r\n    };\r\n\r\n    axios.put(endPoint, Brand_object).then((response) => {\r\n      console.log(response);\r\n      this.getAllBrands();\r\n      this.setState({\r\n        popUpForEdit: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  forceUpdateHandler() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleExit() {\r\n    this.setState({\r\n      popUpForEdit: false,\r\n    });\r\n  }\r\n\r\n  popUpContainer() {\r\n    return (\r\n      <>\r\n        <div className=\"popup-content\">\r\n          <i onClick={this.handleExit} class=\"far fa-times-circle exit-btn\"></i>\r\n          <form id=\"update-form\" onSubmit={this.handleUpdate}></form>\r\n          <div className=\"update-image-icon\">\r\n            <img src={this.state.brandimagePath} />\r\n            <div className=\"image-cloudinary-btn\">\r\n              <CloudinaryWidget\r\n                passResponse={(data) =>\r\n                  this.handleResponseFromCloudinaryWidget(data)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"update-details\">\r\n            <label htmlFor=\"brand-update-name\">Title</label>\r\n            <input\r\n              className=\"update-input-first styled-input\"\r\n              onChange\r\n              form=\"update-brand-form\"\r\n              type=\"text\"\r\n              value={this.state.brandName}\r\n              onChange={this.handleChange}\r\n              id=\"brand-update-name\"\r\n              name=\"brandName\"\r\n            />\r\n            <label htmlFor=\"brand-update-name\">Description</label>\r\n            <textarea\r\n              className=\"update-input-second styled-input\"\r\n              form=\"update-brand-form\"\r\n              value={this.state.brandDescr}\r\n              onChange={this.handleChange}\r\n              name=\"brandDescr\"\r\n            />\r\n            <button form=\"update-form\" className=\"update-button\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"list-container\">\r\n          {this.state.popUpForEdit ? (\r\n            this.popUpContainer()\r\n          ) : (\r\n            <>\r\n              <h2 className=\"title-list\">Brands List</h2>\r\n              <table className=\"my-table\" onClick={this.handleClick}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Logo</th>\r\n                    <th>Name</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.brandsList.map((brand) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{brand.id}</td>\r\n                        <td>\r\n                          <img src={brand.imagePath} />\r\n                        </td>\r\n                        <td>{brand.name}</td>\r\n                        <td>\r\n                          <button value={brand.id}>Edit</button>\r\n                        </td>\r\n                        <td>\r\n                          <button value={brand.id}>delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <p className=\"message\">\r\n                {this.state.brandIsDeleted ? \"Succesfully Deleted\" : \"\"}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrandsInspector;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductInspector.jsx",["110","111","112","113","114"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CloudinaryWidget from \"./CloudinaryWidget\";\r\nclass ProductInspector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productList: [],\r\n      productIsDeleted: false,\r\n      popUpForEdit: false,\r\n      productId: 0,\r\n      productName: \"\",\r\n      productImagePath: \"\",\r\n      productImageList: [],\r\n      productDescr: \"\",\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleExit = this.handleExit.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    const buttonAction = event.target.textContent;\r\n    const targetedProduct = event.target.value;\r\n    if (buttonAction === \"delete\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/products/${targetedProduct}`;\r\n      axios.delete(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          productIsDeleted: response.data,\r\n        });\r\n      });\r\n      const tempProductList = this.state.productList.filter((product) => {\r\n        return product.id != targetedProduct;\r\n      });\r\n      this.setState({\r\n        productList: tempProductList,\r\n      });\r\n    }\r\n    if (buttonAction === \"Edit\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/products/${targetedProduct}`;\r\n      axios.get(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          productId: response.data.id,\r\n          productName: response.data.name,\r\n          productImagePath: response.data.productImageList[0].imagePath,\r\n          productDescr: response.data.descr,\r\n          popUpForEdit: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllProducts() {\r\n    const endpoint = `http://localhost:8080/FashionProject/api/products/user/${this.props.user.id}`;\r\n\r\n    axios.get(endpoint).then((response) => {\r\n      console.log(response);\r\n      this.setState({\r\n        productList: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  handleResponseFromCloudinaryWidget(urlImages) {\r\n    const tempImageList = [];\r\n    tempImageList.push({ imagePath: urlImages.info.secure_url });\r\n    this.setState({\r\n      productImageList: tempImageList,\r\n      productImagePath: urlImages.info.secure_url,\r\n    });\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault();\r\n    const endPoint = `http://localhost:8080/FashionProject/api/products/${this.state.productId}`;\r\n    const Product_object = {\r\n      name: this.state.productName,\r\n      descr: this.state.productDescr,\r\n      productImageList: this.state.productImageList,\r\n    };\r\n\r\n    axios.post(endPoint, Product_object).then((response) => {\r\n      console.log(response);\r\n      this.getAllProducts();\r\n      this.setState({\r\n        popUpForEdit: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleExit() {\r\n    this.setState({\r\n      popUpForEdit: false,\r\n    });\r\n  }\r\n\r\n  popUpContainer() {\r\n    return (\r\n      <>\r\n        <div className=\"popup-content\">\r\n          <i onClick={this.handleExit} class=\"far fa-times-circle exit-btn\"></i>\r\n          <form id=\"update-form\" onSubmit={this.handleUpdate}></form>\r\n          <div className=\"update-image-icon\">\r\n            <img src={this.state.productImagePath} />\r\n            <div className=\"image-cloudinary-btn\">\r\n              <CloudinaryWidget\r\n                passResponse={(data) =>\r\n                  this.handleResponseFromCloudinaryWidget(data)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"update-details\">\r\n            <label htmlFor=\"product-update-name\">Title</label>\r\n            <input\r\n              className=\"update-input-first styled-input\"\r\n              onChange\r\n              form=\"update-form\"\r\n              type=\"text\"\r\n              value={this.state.productName}\r\n              onChange={this.handleChange}\r\n              id=\"product-update-name\"\r\n              name=\"productName\"\r\n            />\r\n            <label htmlFor=\"brand-update-name\">Description</label>\r\n            <textarea\r\n              className=\"update-input-second styled-input\"\r\n              form=\"update-form\"\r\n              value={this.state.productDescr}\r\n              onChange={this.handleChange}\r\n              name=\"productDescr\"\r\n            />\r\n            <button form=\"update-form\" className=\"update-button\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"list-container\">\r\n          {this.state.popUpForEdit ? (\r\n            this.popUpContainer()\r\n          ) : (\r\n            <>\r\n              <h2 className=\"title-list\">Products List</h2>\r\n              <table className=\"my-table\" onClick={this.handleClick}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Image</th>\r\n                    <th>Name</th>\r\n                    <th>Brand</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.productList.map((product) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{product.id}</td>\r\n                        <td>\r\n                          <img\r\n                            src={\r\n                              product.productImageList.length != 0\r\n                                ? product.productImageList[0].imagePath\r\n                                : null\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.brand.name}</td>\r\n                        <td>\r\n                          <button value={product.id}>Edit</button>\r\n                        </td>\r\n                        <td>\r\n                          <button value={product.id}>delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <p className=\"message\">\r\n                {this.state.productIsDeleted ? \"Succesfully Deleted\" : \"\"}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInspector;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SearchPosts.jsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":20},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":83,"column":17,"nodeType":"126","endLine":83,"endColumn":52},{"ruleId":"119","severity":1,"message":"127","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":251,"column":19,"nodeType":"126","endLine":251,"endColumn":64},{"ruleId":"124","severity":1,"message":"125","line":262,"column":19,"nodeType":"126","endLine":262,"endColumn":64},{"ruleId":"119","severity":1,"message":"120","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":20},{"ruleId":"119","severity":1,"message":"128","line":173,"column":13,"nodeType":"121","messageId":"122","endLine":173,"endColumn":18},{"ruleId":"119","severity":1,"message":"129","line":174,"column":11,"nodeType":"121","messageId":"122","endLine":174,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":180,"column":15,"nodeType":"126","endLine":180,"endColumn":76},{"ruleId":"130","severity":1,"message":"131","line":43,"column":66,"nodeType":"132","messageId":"133","endLine":43,"endColumn":68},{"ruleId":"124","severity":1,"message":"125","line":103,"column":23,"nodeType":"126","endLine":106,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":110,"column":23,"nodeType":"126","endLine":114,"endColumn":25},{"ruleId":"119","severity":1,"message":"134","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"130","severity":1,"message":"135","line":35,"column":25,"nodeType":"132","messageId":"133","endLine":35,"endColumn":27},{"ruleId":"124","severity":1,"message":"125","line":118,"column":13,"nodeType":"126","endLine":118,"endColumn":52},{"ruleId":"136","severity":1,"message":"137","line":135,"column":15,"nodeType":"138","endLine":135,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":181,"column":27,"nodeType":"126","endLine":181,"endColumn":56},{"ruleId":"130","severity":1,"message":"135","line":35,"column":27,"nodeType":"132","messageId":"133","endLine":35,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":117,"column":13,"nodeType":"126","endLine":117,"endColumn":54},{"ruleId":"136","severity":1,"message":"137","line":134,"column":15,"nodeType":"138","endLine":134,"endColumn":43},{"ruleId":"124","severity":1,"message":"125","line":181,"column":27,"nodeType":"126","endLine":187,"endColumn":29},{"ruleId":"130","severity":1,"message":"135","line":183,"column":63,"nodeType":"132","messageId":"133","endLine":183,"endColumn":65},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'interceptors' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","'match' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UsernameGenerator' is defined but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js":"1","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js":"2","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx":"4","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx":"5","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js":"6","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx":"7","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx":"8","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx":"9","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx":"10","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx":"11","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx":"12","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx":"13","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx":"14","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx":"15","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx":"16","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\CloudinaryWidget.jsx":"17","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandsInspector.jsx":"18","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductInspector.jsx":"19","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SearchPosts.jsx":"20"},{"size":523,"mtime":1610299430686,"results":"21","hashOfConfig":"22"},{"size":788,"mtime":1610455630053,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1609752807792,"results":"24","hashOfConfig":"22"},{"size":3180,"mtime":1610978746213,"results":"25","hashOfConfig":"22"},{"size":4889,"mtime":1610978746216,"results":"26","hashOfConfig":"22"},{"size":377,"mtime":1609856797639,"results":"27","hashOfConfig":"22"},{"size":621,"mtime":1610978746217,"results":"28","hashOfConfig":"22"},{"size":9574,"mtime":1610978746226,"results":"29","hashOfConfig":"22"},{"size":1365,"mtime":1610978746227,"results":"30","hashOfConfig":"22"},{"size":957,"mtime":1610978746222,"results":"31","hashOfConfig":"22"},{"size":10230,"mtime":1610978746220,"results":"32","hashOfConfig":"22"},{"size":5104,"mtime":1610978746214,"results":"33","hashOfConfig":"22"},{"size":2079,"mtime":1610978746211,"results":"34","hashOfConfig":"22"},{"size":63,"mtime":1610455630128,"results":"35","hashOfConfig":"22"},{"size":2586,"mtime":1610978746208,"results":"36","hashOfConfig":"22"},{"size":3749,"mtime":1610978746218,"results":"37","hashOfConfig":"22"},{"size":1365,"mtime":1610978746212,"results":"38","hashOfConfig":"22"},{"size":6159,"mtime":1610978746210,"results":"39","hashOfConfig":"22"},{"size":6568,"mtime":1610978746219,"results":"40","hashOfConfig":"22"},{"size":4173,"mtime":1610978746224,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jif629",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\index.js",[],["94","95"],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\App.js",["96"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport interceptors from \"./Interceptors\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"app-context\">\r\n          <Router>\r\n              <Route exact path=\"/\" component={Login} />\r\n              <Route  path=\"/dashboard\" component={Dashboard} />\r\n              <Route  path=\"/signup\" component={SignUp} />\r\n          </Router>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Dashboard.jsx",["97","98"],"import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport NavBar from \"./NavBar\";\r\nimport Chat from \"./Chat\";\r\nimport Home from \"./Home\";\r\nimport Profile from \"./Profile\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    document\r\n      .querySelector(\".app-container\")\r\n      .classList.remove(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      chatActive: false,\r\n      props: this.props,\r\n      user: {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        roleList: [],\r\n        username: \"\",\r\n        image: \"\",\r\n      },\r\n    };\r\n    this.toggleChatButton = this.toggleChatButton.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user === null) {\r\n      this.handleLogout();\r\n    } else {\r\n      this.setState({\r\n        user: {\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          roleList: user.roleList,\r\n          username: user.username,\r\n          image: user.image,\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleLogout = () => {\r\n    localStorage.clear();\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  toggleChatButton(event) {\r\n    let active = this.state.chatActive;\r\n    if (event.target.id === \"chat-button\") {\r\n      this.setState({\r\n        chatActive: !active,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleChatMovement() {\r\n    if (this.state.chatActive) {\r\n      return <Chat username={this.state.user.username} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.state.props;\r\n    return (\r\n      <>\r\n        <header className=\"app-header\">\r\n          <h1\r\n            onClick={() => this.props.history.push(\"/dashboard/home\")}\r\n            id=\"logo\"\r\n          >\r\n            FashionBook\r\n          </h1>\r\n          <NavBar url={match.url} />\r\n          <div className=\"app-header-user\">\r\n            <Link className=\"profile-link\" to={`${match.url}/profile`}>\r\n              <div className=\"user-profile\">\r\n                <img src={this.state.user.image} />\r\n                <span>Profile</span>\r\n              </div>\r\n            </Link>\r\n            <button\r\n              className=\"sign-out-btn\"\r\n              type=\"button\"\r\n              onClick={this.handleLogout}\r\n            >\r\n              Signout\r\n            </button>\r\n          </div>\r\n        </header>\r\n        <Route\r\n          path={`${match.path}/home`}\r\n          render={() => (\r\n            <Home\r\n              {...this.props}\r\n              authUser={JSON.parse(localStorage.getItem(\"user\"))}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/profile`}\r\n          {...this.props}\r\n          render={() => (\r\n            <Profile\r\n              {...this.props}\r\n              authUser={JSON.parse(localStorage.getItem(\"user\"))}\r\n            />\r\n          )}\r\n        />\r\n        <div onClick={this.toggleChatButton} className=\"chat-container\">\r\n          <button id=\"chat-button\">Chat</button>\r\n          {this.toggleChatMovement()}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Login.jsx",["99"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    document.querySelector(\".app-container\").classList.add(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleDashboard = this.handleDashboard.bind(this);\r\n  }\r\n\r\n  changeReactValue = (event) => {\r\n    if (event.target.getAttribute(\"name\") === \"username\") {\r\n      this.setState({ username: event.target.value.trim() });\r\n    }\r\n    if (event.target.getAttribute(\"name\") === \"password\") {\r\n      this.setState({ password: event.target.value.trim() });\r\n    }\r\n  };\r\n\r\n  handleSignUpClick = (event) => {\r\n    this.props.history.push(\"/signup\");\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const endpoint = \"http://localhost:8080/FashionProject/authenticate\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      try {\r\n        localStorage.setItem(\"authorization\", res.data.token);\r\n        return this.handleDashboard();\r\n      } catch (error) {\r\n        this.setState({ hasError: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDashboard() {\r\n    const endpoint = \"http://localhost:8080/FashionProject/dashboard\";\r\n    const user_object = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    axios.post(endpoint, user_object).then((res) => {\r\n      \r\n      if (res.status === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(res.data.success));\r\n        this.props.history.push(\"/dashboard/home\");\r\n      } else {\r\n        console.log(\"not showing\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"login\">\r\n          <div className=\"container\">\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h3 className=\"text-center\">Log In</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <form\r\n                    className=\"form-signin\"\r\n                    onSubmit={this.handleFormSubmit}\r\n                  >\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-user\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        onChange={this.changeReactValue}\r\n                        name=\"username\"\r\n                        placeholder=\"username\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"input-group form-group\">\r\n                      <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                          <i className=\"fas fa-key\"></i>\r\n                        </span>\r\n                      </div>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        onChange={this.changeReactValue}\r\n                        placeholder=\"password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        autoComplete=\"on\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"row align-items-center remember\">\r\n                      <input type=\"checkbox\" />\r\n                      Remember Me\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn float-right glow-on-hover\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <div className=\"d-flex justify-content-center links \">\r\n                    <span className=\"p-1\">Don't have an account?</span>\r\n                    <Link\r\n                      className=\"btn btn-warning p-1 px-3 mx-2\"\r\n                      to=\"/signup\"\r\n                    >\r\n                      Sign Up\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\Interceptors.js",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\NavBar.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SignUp.jsx",["100","101","102"],"import React, { Component } from \"react\";\r\nimport StripeButton from \"./StripeButton\";\r\nimport axios from \"axios\";\r\n\r\nclass SignUp extends Component {\r\n  constructor(props) {\r\n    document.querySelector(\".app-container\").classList.add(\"background-image\");\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      dob: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n      role: \"1\",\r\n      plan: {},\r\n      formIsChecked: false,\r\n      formSubmitted: false,\r\n      userSubscribed: false,\r\n    };\r\n    this.sendPostRequest = this.sendPostRequest.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  checkIfFormIsFilled() {\r\n    if (\r\n      this.state.firstName.length > 1 &&\r\n      this.state.lastName.length > 1 &&\r\n      this.state.email.length > 1 &&\r\n      this.state.dob.length > 1 &&\r\n      this.state.password.length > 1 &&\r\n      this.state.username.length > 1\r\n    ) {\r\n      this.setState({\r\n        formIsChecked: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        formIsChecked: false,\r\n      });\r\n    }\r\n    this.showStripeButton();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.checkIfFormIsFilled();\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    this.checkIfFormIsFilled();\r\n  }\r\n\r\n  handleRoleDetailsContainer() {\r\n    if (this.state.role === \"1\") {\r\n      return (\r\n        <>\r\n          <p className=\"role-description\">\r\n            This plan gives you the opportunity to become a real lover of\r\n            fashion, you have the options to chat with the designer of each\r\n            brand and with other lovers and evaluate their products\r\n          </p>\r\n          <div className=\"role-subscription\">\r\n            <span>Free Account</span>\r\n            <button form=\"sign-up-form\">Subscribe Now</button>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <p className=\"role-description\">\r\n            This plan gives you the opportunity to become a real fashion\r\n            designer, you have the options to chat with fans and create new\r\n            brands and products and make your dreams come true\r\n          </p>\r\n          <div className=\"role-subscription\">\r\n            <span>Premium Account</span>\r\n            {this.showStripeButton()}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  showStripeButton() {\r\n    if (this.state.formIsChecked) {\r\n      return (\r\n        <>\r\n          <StripeButton\r\n            sendPost={this.sendPostRequest}\r\n            email={this.state.email}\r\n            fullname={`${this.state.firstName} ${this.state.lastName}`}\r\n            price=\"20\"\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <button>Fill Out The Form</button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  sendPostRequest() {\r\n    \r\n    const endpoint = \"http://localhost:8080/FashionProject/signup\";\r\n    const user = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      email: this.state.email,\r\n      dob: this.state.dob,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      createDate: new Date(),\r\n      image:\r\n        \"https://i1.wp.com/www.awesomegreece.com/wp-content/uploads/2018/10/default-user-image.png\",\r\n      roleList: [{ id: parseInt(this.state.role) }],\r\n      subscription: {\r\n        startDate: new Date(),\r\n        plan: { id: this.state.role },\r\n      },\r\n    };\r\n    axios\r\n      .post(endpoint, user)\r\n      .then((res) => {\r\n       \r\n        this.setState({\r\n          formSubmitted: true,\r\n          userSubscribed: res.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.sendPostRequest();\r\n    if (this.state.formSubmitted) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"\" id=\"signup-container\">\r\n          <h1 className=\"signup-title\">Create an account</h1>\r\n          <section className=\"form-container\">\r\n            <form\r\n              id=\"sign-up-form\"\r\n              className=\"form-signup\"\r\n              onSubmit={this.handleFormSubmit}\r\n            >\r\n              <div id=\"firstname-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"firstname\">\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleChange}\r\n                  required\r\n                  className=\"signup-input\"\r\n                  id=\"firstname\"\r\n                />\r\n              </div>\r\n              <div id=\"lastname-input-section\" className=\"input-form-group\">\r\n                <label className=\"signup-label\" htmlFor=\"lastname\">\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"lastname\"\r\n                />\r\n              </div>\r\n              <div id=\"dob-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"dob\">\r\n                  Birth Date\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"date\"\r\n                  name=\"dob\"\r\n                  value={this.state.dob}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"dob\"\r\n                />\r\n              </div>\r\n              <div id=\"email-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-email\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"signup-email\"\r\n                />\r\n              </div>\r\n              <div id=\"username-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-username\">\r\n                  Username\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                  className=\"signup-input\"\r\n                  id=\"signup-username\"\r\n                />\r\n              </div>\r\n              <div id=\"password-input-section\" className=\"input-form-group \">\r\n                <label className=\"signup-label\" htmlFor=\"signup-password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  required\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                  title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  autoComplete=\"current-password\"\r\n                  className=\"signup-input\"\r\n                  id=\"signup-password\"\r\n                />\r\n                <span className=\"password-reminder\">\r\n                  Must contain at least one number and one uppercase and <br/>\r\n                  lowercase letter, and at least 8 or more characters\r\n                </span>\r\n              </div>\r\n              <div id=\"roles-input-section\" className=\"input-form-group \">\r\n                <p>Please Select Your Role</p>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value={1}\r\n                  onChange={this.handleChange}\r\n                  className=\"sr-only\"\r\n                  id=\"fashion-lover\"\r\n                />\r\n                <label id=\"fashionlover-label\" htmlFor=\"fashion-lover\">\r\n                  <img src=\"https://i.imgur.com/TdJ21oq.gif\" />\r\n                </label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"role\"\r\n                  value={2}\r\n                  onChange={this.handleChange}\r\n                  className=\"sr-only\"\r\n                  id=\"fashion-maker\"\r\n                />\r\n                <label id=\"fashionmaker-label\" htmlFor=\"fashion-maker\">\r\n                  <img src=\"https://i.imgur.com/HvbINLy.gif\" />\r\n                </label>\r\n              </div>\r\n            </form>\r\n            <div className=\"role-details-container\">\r\n              {this.handleRoleDetailsContainer()}\r\n            </div>\r\n            <div>\r\n              <p className=\"message\">\r\n                {this.state.formSubmitted\r\n                  ? \"You have successfully subscribed\"\r\n                  : \"\"}\r\n              </p>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\StripeButton.jsx",["103"],"import React, { Component } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport interceptors from \"../Interceptors\";\r\n\r\nclass StripeButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      publ_stripe_key:\r\n        \"pk_test_51I6V9NDhiMmdhGSnrszydNErU0Bpd6NdaSf356KAL4xhC6UxvGlQtFZlceFQS8IkhuVdfqj6eSpEkfRa5z0ZST2j003zvBa1cU\",\r\n      stripePrice: this.props.price * 100,\r\n    };\r\n    this.onToken = this.onToken.bind(this);\r\n  }\r\n\r\n  onToken(token) {\r\n    const endPoint = \"http://localhost:8080/FashionProject/payment\";\r\n    const priceObject = {\r\n      amount: this.state.stripePrice,\r\n      token,\r\n    };\r\n    axios\r\n      .post(endPoint, priceObject)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.props.sendPost();\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n  render() {\r\n    return (\r\n      <StripeCheckout\r\n        amount={this.state.stripePrice}\r\n        label=\"Pay Now\"\r\n        email={this.props.email}\r\n        name={this.props.fullname}\r\n        image=\"\"\r\n        type=\"button\"\r\n        panelLabel=\"Pay Now\"\r\n        token={this.onToken}\r\n        stripeKey={this.state.publ_stripe_key}\r\n        currency=\"EUR\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default StripeButton;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Search.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Profile.jsx",["104","105","106"],"import React, { Component } from \"react\";\r\nimport { Role } from \"../variables/Roles\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport BrandGenerator from \"./BrandGenerator\";\r\nimport ProductGenerator from \"./ProductGenerator\";\r\nimport BrandsInspector from \"./BrandsInspector\";\r\nimport ProductInspector from \"./ProductInspector\";\r\nimport CloudinaryWidget from \"./CloudinaryWidget\";\r\nimport axios from \"axios\";\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAdmin: false,\r\n      firstName: this.props.authUser.firstName,\r\n      lastName: this.props.authUser.lastName,\r\n      email: this.props.authUser.email,\r\n      dob: new Date(this.props.authUser.dob).toISOString().slice(0, 10),\r\n      username: this.props.authUser.username,\r\n      password: this.props.authUser.password,\r\n      image: this.props.authUser.image,\r\n      isUpdated: false,\r\n    };\r\n\r\n    this.adminLayout = this.adminLayout.bind(this);\r\n    this.userLayout = this.userLayout.bind(this);\r\n    this.handleOnInputChange = this.handleOnInputChange.bind(this);\r\n    this.handleUpdateUser = this.handleUpdateUser.bind(this);\r\n    this.handleDeleteUser = this.handleDeleteUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { roleList } = this.props.authUser;\r\n    if (roleList.some((e) => e.type === Role.Admin)) {\r\n      this.setState({\r\n        isAdmin: true,\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  adminLayout() {\r\n    const { match } = this.props;\r\n    return (\r\n      <>\r\n        <aside className=\"sidebar-container\">\r\n          <h5 className=\"sidebar-heading\">Dashboard</h5>\r\n          <ul>\r\n            <li>\r\n              <Link className=\"hover-link\" to={`${match.url}/profile`}>\r\n                User Settings\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              Brand\r\n              <ul>\r\n                <li>\r\n                  <Link\r\n                    className=\"hover-link\"\r\n                    to={`${match.url}/profile/brands`}\r\n                  >\r\n                    Your Brands\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    className=\"hover-link\"\r\n                    to={`${match.url}/profile/brands/create`}\r\n                  >\r\n                    Create Brand\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n            <li>\r\n              Product\r\n              <ul>\r\n                <li>\r\n                  <Link\r\n                    className=\"hover-link\"\r\n                    to={`${match.url}/profile/products`}\r\n                  >\r\n                    Your Products\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link\r\n                    className=\"hover-link\"\r\n                    to={`${match.url}/profile/products/create`}\r\n                  >\r\n                    Create Product\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </aside>\r\n        <article className=\"article-container\">\r\n          <Route\r\n          exact\r\n            path={`${match.path}/profile`}\r\n            {...this.props}\r\n            render={() => (\r\n              this.userLayout()\r\n            )}\r\n          />\r\n          <Route\r\n            path={`${match.path}/profile/brands/create`}\r\n            {...this.props}\r\n            render={() => (\r\n              <BrandGenerator {...this.props} user={this.props.authUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={`${match.path}/profile/brands`}\r\n            {...this.props}\r\n            render={() => (\r\n              <BrandsInspector {...this.props} user={this.props.authUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            path={`${match.path}/profile/products/create`}\r\n            {...this.props}\r\n            render={() => (\r\n              <ProductGenerator {...this.props} user={this.props.authUser} />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path={`${match.path}/profile/products`}\r\n            {...this.props}\r\n            render={() => (\r\n              <ProductInspector {...this.props} user={this.props.authUser} />\r\n            )}\r\n          />\r\n        </article>\r\n      </>\r\n    );\r\n  }\r\n\r\n  handleOnInputChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleResponseFromCloudinaryWidget(urlImages) {\r\n    this.setState({\r\n      image: urlImages.info.secure_url,\r\n    });\r\n  }\r\n\r\n  handleUpdateUser() {\r\n    const endPoint = `http://localhost:8080/FashionProject/api/user/${this.props.authUser.id}`;\r\n\r\n    const user_object = {\r\n      firstName: this.state.firstName,\r\n      lastName: this.state.lastName,\r\n      email: this.state.email,\r\n      dob: this.state.dob,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      image: this.state.image,\r\n    };\r\n\r\n    axios.put(endPoint, user_object).then((response) => {\r\n      this.setState({\r\n        isUpdated: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleDeleteUser() {\r\n    const endPoint = `http://localhost:8080/FashionProject/api/user/${this.props.authUser.id}`;\r\n\r\n    axios.delete(endPoint).then((response) => {\r\n      if (response.data === true) {\r\n        localStorage.clear();\r\n        this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  userLayout() {\r\n    const { match } = this.props;\r\n    const user = this.props.authUser;\r\n    return (\r\n      <>\r\n        <div className=\"not-admin-user-container\">\r\n          <div className=\"not-admin-user-content-container\">\r\n            <div className=\"image-user-profile\">\r\n              <img className=\"image-user-profile\" src={this.state.image} />\r\n              <div className=\"cloudinary-absolute-position-container\">\r\n                <CloudinaryWidget\r\n                  passResponse={(data) =>\r\n                    this.handleResponseFromCloudinaryWidget(data)\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"user-details\">\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label\r\n                  className=\"search-label\"\r\n                  htmlFor=\"profile-firstname-input\"\r\n                >\r\n                  First Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"profile-firstname-input\"\r\n                  className=\"styled-input\"\r\n                  name=\"firstName\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label\r\n                  className=\"search-label\"\r\n                  htmlFor=\"profile-lastName-input\"\r\n                >\r\n                  Last Name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastName\"\r\n                  id=\"profile-lastName-input\"\r\n                  className=\"styled-input\"\r\n                  value={this.state.lastName}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label className=\"search-label\" htmlFor=\"profile-email-input\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  id=\"profile-email-input\"\r\n                  className=\"styled-input\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label className=\"search-label\" htmlFor=\"profile-dob-input\">\r\n                  Birth Date\r\n                </label>\r\n                <input\r\n                  name=\"dob\"\r\n                  type=\"date\"\r\n                  id=\"profile-dob-input\"\r\n                  className=\"styled-input\"\r\n                  value={this.state.dob}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label\r\n                  className=\"search-label\"\r\n                  htmlFor=\"profile-username-input\"\r\n                >\r\n                  Username\r\n                </label>\r\n                <input\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  id=\"profile-username-input\"\r\n                  className=\"styled-input\"\r\n                  value={this.state.username}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"user-details-profile-inputs\">\r\n                <label\r\n                  className=\"search-label\"\r\n                  htmlFor=\"profile-password-input\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"profile-password-input\"\r\n                  className=\"styled-input\"\r\n                  value={this.state.password}\r\n                  onChange={this.handleOnInputChange}\r\n                />\r\n              </div>\r\n              <p className=\"message user-message\">\r\n                {this.state.isUpdated ? \"Successfully Updated\" : \"\"}\r\n              </p>\r\n\r\n              <button onClick={this.handleUpdateUser} className=\"create-btn\">\r\n                Submit\r\n              </button>\r\n              <i\r\n                onClick={this.handleDeleteUser}\r\n                class=\"far fa-times-circle exit-btn delete-user\"\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <main className=\"profile-container\">\r\n          {this.state.isAdmin ? this.adminLayout() : this.userLayout()}\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Home.jsx",["107","108","109"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchPosts from \"./SearchPosts\";\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dbProductList: [],\r\n      filterList: [],\r\n      likedProducts: [],\r\n      checkedLikedProducts: new Map(),\r\n    };\r\n    this.findTheLikedProducts = this.findTheLikedProducts.bind(this);\r\n    this.handleLikes = this.handleLikes.bind(this);\r\n    this.addLikesInDb = this.addLikesInDb.bind(this);\r\n    this.removeLikesInDb = this.removeLikesInDb.bind(this);\r\n    this.handleFilteringValues = this.handleFilteringValues.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const endPoint = \"http://localhost:8080/FashionProject/api/products\";\r\n    axios.get(endPoint).then((response) => {\r\n      this.findTheLikedProducts(response.data);\r\n      this.setState({\r\n        dbProductList: response.data,\r\n        filterList: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  findTheLikedProducts(productDataList) {\r\n    axios\r\n      .get(\r\n        `http://localhost:8080/FashionProject/api/likes/user/${this.props.authUser.id}`\r\n      )\r\n      .then((response) => {\r\n       \r\n        const likedProducts = response.data;\r\n        const allProducts = productDataList;\r\n        const checkedLikedProducts = new Map();\r\n        allProducts.forEach((product) => {\r\n          if (\r\n            likedProducts.some((likedProduct) => likedProduct.id == product.id)\r\n          ) {\r\n            checkedLikedProducts.set(product.id, true);\r\n          } else {\r\n            checkedLikedProducts.set(product.id, false);\r\n          }\r\n        });\r\n        this.setState({\r\n          checkedLikedProducts,\r\n          likedProducts,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleLikes(productId) {\r\n    const checkedLikedProducts = this.state.checkedLikedProducts;\r\n    if (!this.state.checkedLikedProducts.get(productId)) {\r\n      checkedLikedProducts.set(productId, true);\r\n      this.addLikesInDb(productId);\r\n    } else {\r\n      checkedLikedProducts.set(productId, false);\r\n      this.removeLikesInDb(productId);\r\n    }\r\n    this.setState({\r\n      checkedLikedProducts,\r\n    });\r\n  }\r\n\r\n  addLikesInDb(productId) {\r\n    const endPoint = `http://localhost:8080/FashionProject/api/likes/user/${this.props.authUser.id}/product/${productId}`;\r\n    axios.get(endPoint).then((response) => {\r\n     \r\n    });\r\n  }\r\n\r\n  removeLikesInDb(productId) {\r\n    const endPoint = `http://localhost:8080/FashionProject/api/likes/user/${this.props.authUser.id}/product/${productId}`;\r\n    axios.delete(endPoint).then((response) => {\r\n      console.log(response);\r\n    });\r\n  }\r\n\r\n  handleFilteringValues(filterList) {\r\n    this.setState({\r\n      filterList,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <>\r\n        <main className=\"home-container\">\r\n          <div className=\"posts-list-container\">\r\n            {this.state.filterList.map((product) => {\r\n              return (\r\n                <>\r\n                  <article className=\"post-container\">\r\n                    <section className=\"post-header-user-container\">\r\n                      <img\r\n                        className=\"brand-image\"\r\n                        src={product.brand.imagePath}\r\n                      />\r\n                      <p className=\"brand-dtls\">{product.name}</p>\r\n                    </section>\r\n                    <section className=\"post-image-container\">\r\n                      <img\r\n                        onDoubleClick={() => this.handleLikes(product.id)}\r\n                        className=\"post-image\"\r\n                        src={product.productImageList[0].imagePath}\r\n                      />\r\n                    </section>\r\n                    <section className=\"post-interact-container\">\r\n                      <div className=\"rating-section\">\r\n                        <svg\r\n                          onClick={() => this.handleLikes(product.id)}\r\n                          className={\r\n                            this.state.checkedLikedProducts.get(product.id)\r\n                              ? \"heart liked\"\r\n                              : \"heart\"\r\n                          }\r\n                          viewBox=\"0 0 32 29.6\"\r\n                        >\r\n                          <path\r\n                            d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\r\n\t                            c6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"\r\n                          />\r\n                        </svg>\r\n                        <i></i>\r\n                      </div>\r\n                      <div className=\"product-description\">{product.descr}</div>\r\n                    </section>\r\n                  </article>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n          <aside className=\"filter-section\">\r\n            <SearchPosts\r\n              filter={(data) => this.handleFilteringValues(data)}\r\n              data={this.state.dbProductList}\r\n            />\r\n          </aside>\r\n        </main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\Chat.jsx",["110"],"import React, { Component } from \"react\";\r\nimport SockJsClient from \"react-stomp\";\r\nimport axios from \"axios\";\r\nimport { TalkBox } from \"react-talk\";\r\nimport UsernameGenerator from \"username-generator\";\r\n\r\nconst randomstring = require(\"randomstring\");\r\nclass Chat extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props);\r\n    this.randomUserName = this.props.username;\r\n    this.randomUserId = randomstring.generate();\r\n    this.state = {\r\n      clientConnected: false,\r\n      messages: [],\r\n    };\r\n  }\r\n  onMessageReceive = (msg, topic) => {\r\n    this.setState((prevState) => ({\r\n      messages: [...prevState.messages, msg],\r\n    }));\r\n  };\r\n\r\n  sendMessage = (msg, selfMsg) => {\r\n    try {\r\n      this.clientRef.sendMessage(\"/app/all\", JSON.stringify(selfMsg));\r\n      return true;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    axios\r\n      .get(\"http://localhost:8080/FashionProject/history\")\r\n      .then((response) => {\r\n      \r\n        if (this._isMounted) {\r\n          this.setState({ messages: response.data });\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const wsSourceUrl = \"http://localhost:8080/FashionProject/handler\";\r\n    return (\r\n      <div className=\"talkbox-wrapper\">\r\n        <TalkBox\r\n          topic=\"Chat\"\r\n          currentUserId={this.randomUserId}\r\n          currentUser={this.randomUserName}\r\n          messages={this.state.messages}\r\n          onSendMessage={this.sendMessage}\r\n          connected={this.state.clientConnected}\r\n        />\r\n\r\n        <SockJsClient\r\n          url={wsSourceUrl}\r\n          topics={[\"/topic/all\"]}\r\n          onMessage={this.onMessageReceive}\r\n          ref={(client) => {\r\n            this.clientRef = client;\r\n          }}\r\n          onConnect={() => {\r\n            this.setState({ clientConnected: true });\r\n          }}\r\n          onDisconnect={() => {\r\n            this.setState({ clientConnected: false });\r\n          }}\r\n          debug={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chat;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\variables\\Roles.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandGenerator.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductGenerator.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\CloudinaryWidget.jsx",[],"C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\BrandsInspector.jsx",["111","112","113","114"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CloudinaryWidget from \"./CloudinaryWidget\";\r\nclass BrandsInspector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      brandsList: [],\r\n      brandIsDeleted: false,\r\n      popUpForEdit: false,\r\n      brandId: 0,\r\n      brandName: \"\",\r\n      brandimagePath: \"\",\r\n      brandDescr: \"\",\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.forceUpdateHandler = this.forceUpdateHandler.bind(this);\r\n    this.handleExit = this.handleExit.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    const buttonAction = event.target.textContent;\r\n    const targetedBrand = event.target.value;\r\n    if (buttonAction === \"delete\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/brands/${targetedBrand}`;\r\n      axios.delete(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          brandIsDeleted: response.data,\r\n        });\r\n      });\r\n      const tempBrandList = this.state.brandsList.filter((brand) => {\r\n        return brand.id != targetedBrand;\r\n      });\r\n      this.setState({\r\n        brandsList: tempBrandList,\r\n      });\r\n    }\r\n    if (buttonAction === \"Edit\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/brands/${targetedBrand}`;\r\n      axios.get(endPoint).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          brandId: response.data.id,\r\n          brandName: response.data.name,\r\n          brandimagePath: response.data.imagePath,\r\n          brandDescr: response.data.descr,\r\n          popUpForEdit: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllBrands() {\r\n    const endpoint = `http://localhost:8080/FashionProject/api/brands/user/${this.props.user.id}`;\r\n\r\n    axios.get(endpoint).then((response) => {\r\n      this.setState({\r\n        brandsList: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllBrands();\r\n  }\r\n\r\n  handleResponseFromCloudinaryWidget(urlImages) {\r\n    this.setState({\r\n      brandimagePath: urlImages.info.secure_url,\r\n    });\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault();\r\n    const endPoint = `http://localhost:8080/FashionProject/api/brands/${this.state.brandId}`;\r\n    const Brand_object = {\r\n      name: this.state.brandName,\r\n      descr: this.state.brandDescr,\r\n      imagePath: this.state.brandimagePath,\r\n      user: this.props.user.id,\r\n    };\r\n\r\n    axios.put(endPoint, Brand_object).then((response) => {\r\n      console.log(response);\r\n      this.getAllBrands();\r\n      this.setState({\r\n        popUpForEdit: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  forceUpdateHandler() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleExit() {\r\n    this.setState({\r\n      popUpForEdit: false,\r\n    });\r\n  }\r\n\r\n  popUpContainer() {\r\n    return (\r\n      <>\r\n        <div className=\"popup-content\">\r\n          <i onClick={this.handleExit} class=\"far fa-times-circle exit-btn\"></i>\r\n          <form id=\"update-form\" onSubmit={this.handleUpdate}></form>\r\n          <div className=\"update-image-icon\">\r\n            <img src={this.state.brandimagePath} />\r\n            <div className=\"image-cloudinary-btn\">\r\n              <CloudinaryWidget\r\n                passResponse={(data) =>\r\n                  this.handleResponseFromCloudinaryWidget(data)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"update-details\">\r\n            <label htmlFor=\"brand-update-name\">Title</label>\r\n            <input\r\n              className=\"update-input-first styled-input\"\r\n              onChange\r\n              form=\"update-brand-form\"\r\n              type=\"text\"\r\n              value={this.state.brandName}\r\n              onChange={this.handleChange}\r\n              id=\"brand-update-name\"\r\n              name=\"brandName\"\r\n            />\r\n            <label htmlFor=\"brand-update-name\">Description</label>\r\n            <textarea\r\n              className=\"update-input-second styled-input\"\r\n              form=\"update-brand-form\"\r\n              value={this.state.brandDescr}\r\n              onChange={this.handleChange}\r\n              name=\"brandDescr\"\r\n            />\r\n            <button form=\"update-form\" className=\"update-button\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"list-container\">\r\n          {this.state.popUpForEdit ? (\r\n            this.popUpContainer()\r\n          ) : (\r\n            <>\r\n              <h2 className=\"title-list\">Brands List</h2>\r\n              <table className=\"my-table\" onClick={this.handleClick}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Logo</th>\r\n                    <th>Name</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.brandsList.map((brand) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{brand.id}</td>\r\n                        <td>\r\n                          <img src={brand.imagePath} />\r\n                        </td>\r\n                        <td>{brand.name}</td>\r\n                        <td>\r\n                          <button value={brand.id}>Edit</button>\r\n                        </td>\r\n                        <td>\r\n                          <button value={brand.id}>delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <p className=\"message\">\r\n                {this.state.brandIsDeleted ? \"Succesfully Deleted\" : \"\"}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrandsInspector;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\ProductInspector.jsx",["115","116","117","118","119"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport CloudinaryWidget from \"./CloudinaryWidget\";\r\nclass ProductInspector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productList: [],\r\n      productIsDeleted: false,\r\n      popUpForEdit: false,\r\n      productId: 0,\r\n      productName: \"\",\r\n      productImagePath: \"\",\r\n      productImageList: [],\r\n      productDescr: \"\",\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleExit = this.handleExit.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    const buttonAction = event.target.textContent;\r\n    const targetedProduct = event.target.value;\r\n    if (buttonAction === \"delete\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/products/${targetedProduct}`;\r\n      axios.delete(endPoint).then((response) => {\r\n        \r\n        this.setState({\r\n          productIsDeleted: response.data,\r\n        });\r\n      });\r\n      const tempProductList = this.state.productList.filter((product) => {\r\n        return product.id != targetedProduct;\r\n      });\r\n      this.setState({\r\n        productList: tempProductList,\r\n      });\r\n    }\r\n    if (buttonAction === \"Edit\") {\r\n      const endPoint = `http://localhost:8080/FashionProject/api/products/${targetedProduct}`;\r\n      axios.get(endPoint).then((response) => {\r\n       \r\n        this.setState({\r\n          productId: response.data.id,\r\n          productName: response.data.name,\r\n          productImagePath: response.data.productImageList[0].imagePath,\r\n          productDescr: response.data.descr,\r\n          popUpForEdit: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllProducts() {\r\n    const endpoint = `http://localhost:8080/FashionProject/api/products/user/${this.props.user.id}`;\r\n\r\n    axios.get(endpoint).then((response) => {\r\n      \r\n      this.setState({\r\n        productList: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllProducts();\r\n  }\r\n\r\n  handleResponseFromCloudinaryWidget(urlImages) {\r\n    const tempImageList = [];\r\n    tempImageList.push({ imagePath: urlImages.info.secure_url });\r\n    this.setState({\r\n      productImageList: tempImageList,\r\n      productImagePath: urlImages.info.secure_url,\r\n    });\r\n  }\r\n\r\n  handleUpdate(event) {\r\n    event.preventDefault();\r\n    const endPoint = `http://localhost:8080/FashionProject/api/products/${this.state.productId}`;\r\n    const Product_object = {\r\n      name: this.state.productName,\r\n      descr: this.state.productDescr,\r\n      productImageList: this.state.productImageList,\r\n    };\r\n\r\n    axios.post(endPoint, Product_object).then((response) => {\r\n      \r\n      this.getAllProducts();\r\n      this.setState({\r\n        popUpForEdit: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleExit() {\r\n    this.setState({\r\n      popUpForEdit: false,\r\n    });\r\n  }\r\n\r\n  popUpContainer() {\r\n    return (\r\n      <>\r\n        <div className=\"popup-content\">\r\n          <i onClick={this.handleExit} class=\"far fa-times-circle exit-btn\"></i>\r\n          <form id=\"update-form\" onSubmit={this.handleUpdate}></form>\r\n          <div className=\"update-image-icon\">\r\n            <img src={this.state.productImagePath} />\r\n            <div className=\"image-cloudinary-btn\">\r\n              <CloudinaryWidget\r\n                passResponse={(data) =>\r\n                  this.handleResponseFromCloudinaryWidget(data)\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"update-details\">\r\n            <label htmlFor=\"product-update-name\">Title</label>\r\n            <input\r\n              className=\"update-input-first styled-input\"\r\n              onChange\r\n              form=\"update-form\"\r\n              type=\"text\"\r\n              value={this.state.productName}\r\n              onChange={this.handleChange}\r\n              id=\"product-update-name\"\r\n              name=\"productName\"\r\n            />\r\n            <label htmlFor=\"brand-update-name\">Description</label>\r\n            <textarea\r\n              className=\"update-input-second styled-input\"\r\n              form=\"update-form\"\r\n              value={this.state.productDescr}\r\n              onChange={this.handleChange}\r\n              name=\"productDescr\"\r\n            />\r\n            <button form=\"update-form\" className=\"update-button\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"list-container\">\r\n          {this.state.popUpForEdit ? (\r\n            this.popUpContainer()\r\n          ) : (\r\n            <>\r\n              <h2 className=\"title-list\">Products List</h2>\r\n              <table className=\"my-table\" onClick={this.handleClick}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Id</th>\r\n                    <th>Image</th>\r\n                    <th>Name</th>\r\n                    <th>Brand</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.productList.map((product) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{product.id}</td>\r\n                        <td>\r\n                          <img\r\n                            src={\r\n                              product.productImageList.length != 0\r\n                                ? product.productImageList[0].imagePath\r\n                                : null\r\n                            }\r\n                          />\r\n                        </td>\r\n                        <td>{product.name}</td>\r\n                        <td>{product.brand.name}</td>\r\n                        <td>\r\n                          <button value={product.id}>Edit</button>\r\n                        </td>\r\n                        <td>\r\n                          <button value={product.id}>delete</button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <p className=\"message\">\r\n                {this.state.productIsDeleted ? \"Succesfully Deleted\" : \"\"}\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInspector;\r\n","C:\\Users\\User\\Documents\\java\\ServletApps\\FashionProject\\src\\main\\frondend\\developing-frondend\\src\\components\\SearchPosts.jsx",[],["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":20},{"ruleId":"126","severity":1,"message":"130","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":83,"column":17,"nodeType":"133","endLine":83,"endColumn":52},{"ruleId":"126","severity":1,"message":"134","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":170,"column":19,"nodeType":"137","endLine":170,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":264,"column":19,"nodeType":"133","endLine":264,"endColumn":64},{"ruleId":"131","severity":1,"message":"132","line":275,"column":19,"nodeType":"133","endLine":275,"endColumn":64},{"ruleId":"126","severity":1,"message":"127","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":20},{"ruleId":"126","severity":1,"message":"138","line":186,"column":13,"nodeType":"128","messageId":"129","endLine":186,"endColumn":18},{"ruleId":"126","severity":1,"message":"139","line":187,"column":11,"nodeType":"128","messageId":"129","endLine":187,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":193,"column":15,"nodeType":"133","endLine":193,"endColumn":76},{"ruleId":"140","severity":1,"message":"141","line":43,"column":66,"nodeType":"142","messageId":"143","endLine":43,"endColumn":68},{"ruleId":"131","severity":1,"message":"132","line":103,"column":23,"nodeType":"133","endLine":106,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":110,"column":23,"nodeType":"133","endLine":114,"endColumn":25},{"ruleId":"126","severity":1,"message":"144","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":25},{"ruleId":"140","severity":1,"message":"145","line":35,"column":25,"nodeType":"142","messageId":"143","endLine":35,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":118,"column":13,"nodeType":"133","endLine":118,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":135,"column":15,"nodeType":"137","endLine":135,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":181,"column":27,"nodeType":"133","endLine":181,"endColumn":56},{"ruleId":"140","severity":1,"message":"145","line":35,"column":27,"nodeType":"142","messageId":"143","endLine":35,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":117,"column":13,"nodeType":"133","endLine":117,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":134,"column":15,"nodeType":"137","endLine":134,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":181,"column":27,"nodeType":"133","endLine":187,"endColumn":29},{"ruleId":"140","severity":1,"message":"145","line":183,"column":63,"nodeType":"142","messageId":"143","endLine":183,"endColumn":65},{"ruleId":"122","replacedBy":"146"},{"ruleId":"124","replacedBy":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'interceptors' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'match' is assigned a value but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UsernameGenerator' is defined but never used.","Expected '!==' and instead saw '!='.",["148"],["149"],"no-global-assign","no-unsafe-negation"]